# Change the server port if 8080 is already bound
#server.port=9090

# Let's make sure we have the right driver class configured for postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Database credentials (make sure you add this file to git ignore if you don't want this being posted)
spring.datasource.url =jdbc:postgresql://${DB_URL}:5432/postgres?currentSchema=cms
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# Next we need to configure some settings that will help Spring later when we talk to the db
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Some sample actuator properties
management.endpoint.health.show-details=always

# Remember when we configured all our beans manually? Let's look at all the beans spring boot is managing and
# be thankful we don't have to see this

management.endpoint.beans.enabled = true
management.endpoint.mappings.enabled = true
management.endpoints.web.exposure.include = health, beans, mappings

spring.devtools.restart.enabled = true

# logging.file.path = .